import java.util.*;

public class Solution {
	
	public static long maximumNonAdjacentSum(ArrayList<Integer> nums) {
		long prev = nums.get(0);
		long prev2 =0;
		
		for(int i=1;i<nums.size();i++){
			long take = nums.get(i);
			if(i> 1) take+=prev2;
			
			long notTake = 0+prev;
			
			long curr = Math.max(take,notTake);
			
			prev2 = prev;
			prev = curr;
		}
		
		return prev;
	}
	public static long houseRobber(int[] valueInHouse) {
		int n = valueInHouse.length;
		
		if (n == 1){
			return valueInHouse[0];
		}
		ArrayList<Integer> first = new ArrayList<Integer>();
		ArrayList<Integer> second = new ArrayList<Integer>();
		for(int i =0;i<valueInHouse.length;i++){
			if(i != 0) first.add(valueInHouse[i]);
			if(i != n-1) second.add(valueInHouse[i]);
			
		}
		
		return Math.max(maximumNonAdjacentSum(first), maximumNonAdjacentSum(second));
	}
}
