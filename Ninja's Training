import java.util.*;

public class Solution {
	
	public static int f(int points[][], int day, int last, int dp[][]){
		
		if(dp[day][last] != -1) return dp[day][last];
		
		if(day==0){
			int max =0;
			for(int task = 0;task<=2;task++){
				   if(task!= last){
					max = Math.max(max,points[0][task]);
				   }
			}
			
			return dp[day][last] = max;
		}
		
		
		int max = 0;
		for(int task = 0; task <=2 ; task++){
			if(task!=last){
				int point = points[day][task] + f(points,day-1,task,dp);
				max = Math.max(max,point);
			}
		}
		
		dp[day][last] = max;
		return dp[day][last];
	}
	
    public static int ninjaTraining(int n, int points[][]) {
         int [][]dp = new int[n][4];
		 for (int[] row: dp)
            Arrays.fill(row, -1);
        return f(points,n-1,3,dp);
		 
    }

}
